{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barke\\\\OneDrive\\\\Desktop\\\\Solo_Cap_Front_and_Back\\\\Solo_Cap_Front\\\\src\\\\components\\\\flashcardtest\\\\Flashcardapp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Flashcardlist from './Flashcardlist';\nimport './Flashcardapp.css';\nimport axios from 'axios'; // function Flashcardapp() {\n//     const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS)\n//     return (\n//         <Flashcardlist flashcards={flashcards} />\n//     );\n// }\n// const SAMPLE_FLASHCARDS = [\n//   {\n//     id: 1, \n//     question: 'What is 2 + 2?',\n//     answer: '4',\n//     options: [\n//       '2',\n//       '3',\n//       '4',\n//       '5'\n//     ]\n//   },\n// {\n//   id: 2, \n//   question: 'Question 2?',\n//   answer: 'Answer',\n//   options: [\n//     'Answer',\n//     'Answer1',\n//     'Answer2',\n//     'Answer3'\n//   ]\n// }\n// ]\n// export default Flashcardapp\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Flashcardapp() {\n  _s();\n\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const categoryEl = useRef();\n  const amountEl = useRef();\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php').then(res => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n  useEffect(() => {}, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    }).then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - .5)\n        };\n      }));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"header\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category\",\n          ref: categoryEl,\n          children: categories.map(category => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Number of Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          min: \"1\",\n          step: \"1\",\n          defaultValue: 10,\n          ref: amountEl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(FlashcardList, {\n        flashcards: flashcards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Flashcardapp, \"oNaZgHrR/8m5ivdRJEEpXYQKjSQ=\");\n\n_c = Flashcardapp;\nexport default Flashcardapp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flashcardapp\");","map":{"version":3,"sources":["C:/Users/barke/OneDrive/Desktop/Solo_Cap_Front_and_Back/Solo_Cap_Front/src/components/flashcardtest/Flashcardapp.jsx"],"names":["React","useState","useEffect","useRef","Flashcardlist","axios","Flashcardapp","flashcards","setFlashcards","categories","setCategories","categoryEl","amountEl","get","then","res","data","trivia_categories","decodeString","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","params","amount","current","category","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef  } from 'react';\r\nimport Flashcardlist from './Flashcardlist';\r\nimport './Flashcardapp.css'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n// function Flashcardapp() {\r\n//     const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS)\r\n    \r\n//     return (\r\n//         <Flashcardlist flashcards={flashcards} />\r\n//     );\r\n// }\r\n\r\n\r\n      \r\n\r\n// const SAMPLE_FLASHCARDS = [\r\n//   {\r\n//     id: 1, \r\n//     question: 'What is 2 + 2?',\r\n//     answer: '4',\r\n//     options: [\r\n//       '2',\r\n//       '3',\r\n//       '4',\r\n//       '5'\r\n//     ]\r\n//   },\r\n\r\n\r\n// {\r\n//   id: 2, \r\n//   question: 'Question 2?',\r\n//   answer: 'Answer',\r\n//   options: [\r\n//     'Answer',\r\n//     'Answer1',\r\n//     'Answer2',\r\n//     'Answer3'\r\n//   ]\r\n// }\r\n// ]\r\n// export default Flashcardapp\r\n\r\nfunction Flashcardapp() {\r\n    const [flashcards, setFlashcards] = useState([])\r\n    const [categories, setCategories] = useState([])\r\n  \r\n    const categoryEl = useRef()\r\n    const amountEl = useRef()\r\n  \r\n    useEffect(() => {\r\n      axios\r\n        .get('https://opentdb.com/api_category.php')\r\n        .then(res => {\r\n          setCategories(res.data.trivia_categories)\r\n        })\r\n    }, [])\r\n  \r\n    useEffect(() => {\r\n     \r\n    }, [])\r\n  \r\n    function decodeString(str) {\r\n      const textArea = document.createElement('textarea')\r\n      textArea.innerHTML= str\r\n      return textArea.value\r\n    }\r\n  \r\n    function handleSubmit(e) {\r\n      e.preventDefault()\r\n      axios\r\n      .get('https://opentdb.com/api.php', {\r\n        params: {\r\n          amount: amountEl.current.value,\r\n          category: categoryEl.current.value\r\n        }\r\n      })\r\n      .then(res => {\r\n        setFlashcards(res.data.results.map((questionItem, index) => {\r\n          const answer = decodeString(questionItem.correct_answer)\r\n          const options = [\r\n            ...questionItem.incorrect_answers.map(a => decodeString(a)),\r\n            answer\r\n          ]\r\n          return {\r\n            id: `${index}-${Date.now()}`,\r\n            question: decodeString(questionItem.question),\r\n            answer: answer,\r\n            options: options.sort(() => Math.random() - .5)\r\n          }\r\n        }))\r\n      })\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <form className=\"header\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"category\">Category</label>\r\n            <select id=\"category\" ref={categoryEl}>\r\n              {categories.map(category => {\r\n                return <option value={category.id} key={category.id}>{category.name}</option>\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"amount\">Number of Questions</label>\r\n            <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button className=\"btn\">Generate</button>\r\n          </div>\r\n        </form>\r\n        <div className=\"container\">\r\n          <FlashcardList flashcards={flashcards} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default Flashcardapp;"]},"metadata":{},"sourceType":"module"}