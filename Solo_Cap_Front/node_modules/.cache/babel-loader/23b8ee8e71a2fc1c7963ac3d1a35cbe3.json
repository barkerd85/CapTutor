{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barke\\\\OneDrive\\\\Desktop\\\\Solo_Cap_Front_and_Back\\\\Solo_Cap_Front\\\\src\\\\components\\\\flashcardtest\\\\Flashcard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // export default function Flashcard({ flashcard }) {\n//     const [flip, setFlip] = useState(false)\n//     return (\n//         <div\n//           className={`card $(flip ? 'flip' : '')`}\n//           onClick={() => setFlip(!flip)}\n//         >\n//           <div className='front'>\n//             {flashcard.question}\n//             <div className='flashcard-options'>\n//               {flashcard.options.map(option => {\n//                 return <div className='flashcard-option'>{option}</div>\n//               })}\n//             </div>\n//           </div>\n//           <div className='back'>{flashcard.answer}</div>  \n//         </div>\n//     )      \n// }           \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Flashcard(_ref) {\n  _s();\n\n  let {\n    flashcard\n  } = _ref;\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState('initial');\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = backEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight, 100));\n  }\n\n  useEffect(setMaxHeight, [flashcard.question, flashcard.answer, flashcard.options]);\n  useEffect(() => {\n    window.addEventListener('resize', setMaxHeight);\n    return () => window.removeEventListener('resize', setMaxHeight);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${flip ? 'flip' : ''}`,\n    style: {\n      height: height\n    },\n    onClick: () => setFlip(!flip),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"front\",\n      ref: frontEl,\n      children: [flashcard.question, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcard-options\",\n        children: flashcard.options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard-option\",\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back\",\n      ref: backEl,\n      children: flashcard.answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Flashcard, \"qfG400B5FHOE/tWxRI+kaoxtmzk=\");\n\n_c = Flashcard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"sources":["C:/Users/barke/OneDrive/Desktop/Solo_Cap_Front_and_Back/Solo_Cap_Front/src/components/flashcardtest/Flashcard.jsx"],"names":["React","useState","Flashcard","flashcard","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","map","option"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA,eAAe,SAASC,SAAT,OAAkC;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,SAAD,CAApC;AAEA,QAAMO,OAAO,GAAGC,MAAM,EAAtB;AACA,QAAMC,MAAM,GAAGD,MAAM,EAArB;;AAEA,WAASE,YAAT,GAAwB;AACtB,UAAMC,WAAW,GAAGJ,OAAO,CAACK,OAAR,CAAgBC,qBAAhB,GAAwCR,MAA5D;AACA,UAAMS,UAAU,GAAGL,MAAM,CAACG,OAAP,CAAeC,qBAAf,GAAuCR,MAA1D;AACAC,IAAAA,SAAS,CAACS,IAAI,CAACC,GAAL,CAASL,WAAT,EAAsBG,UAAtB,EAAkC,GAAlC,CAAD,CAAT;AACD;;AAEDG,EAAAA,SAAS,CAACP,YAAD,EAAe,CAACR,SAAS,CAACgB,QAAX,EAAqBhB,SAAS,CAACiB,MAA/B,EAAuCjB,SAAS,CAACkB,OAAjD,CAAf,CAAT;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCZ,YAAlC;AACA,WAAO,MAAMW,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCb,YAArC,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AACE,IAAA,SAAS,EAAG,QAAOP,IAAI,GAAG,MAAH,GAAY,EAAG,EADxC;AAEE,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAEA;AAAV,KAFT;AAGE,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CAHxB;AAAA,4BAKE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAEI,OAA5B;AAAA,iBACGL,SAAS,CAACgB,QADb,eAEE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACGhB,SAAS,CAACkB,OAAV,CAAkBI,GAAlB,CAAsBC,MAAM,IAAI;AAC/B,8BAAO;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,sBAAgDA;AAAhD,aAAuCA,MAAvC;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAaE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEhB,MAA3B;AAAA,gBAAoCP,SAAS,CAACiB;AAA9C;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GApCuBlB,S;;KAAAA,S","sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\n// export default function Flashcard({ flashcard }) {\r\n//     const [flip, setFlip] = useState(false)\r\n\r\n//     return (\r\n//         <div\r\n//           className={`card $(flip ? 'flip' : '')`}\r\n//           onClick={() => setFlip(!flip)}\r\n//         >\r\n//           <div className='front'>\r\n//             {flashcard.question}\r\n//             <div className='flashcard-options'>\r\n//               {flashcard.options.map(option => {\r\n//                 return <div className='flashcard-option'>{option}</div>\r\n//               })}\r\n//             </div>\r\n//           </div>\r\n//           <div className='back'>{flashcard.answer}</div>  \r\n//         </div>\r\n//     )      \r\n// }           \r\n        \r\n    \r\n   \r\n        \r\n\r\nexport default function Flashcard({ flashcard }) {\r\n  const [flip, setFlip] = useState(false)\r\n  const [height, setHeight] = useState('initial')\r\n\r\n  const frontEl = useRef()\r\n  const backEl = useRef()\r\n\r\n  function setMaxHeight() {\r\n    const frontHeight = frontEl.current.getBoundingClientRect().height\r\n    const backHeight = backEl.current.getBoundingClientRect().height\r\n    setHeight(Math.max(frontHeight, backHeight, 100))\r\n  }\r\n\r\n  useEffect(setMaxHeight, [flashcard.question, flashcard.answer, flashcard.options])\r\n  useEffect(() => {\r\n    window.addEventListener('resize', setMaxHeight)\r\n    return () => window.removeEventListener('resize', setMaxHeight)\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={`card ${flip ? 'flip' : ''}`}\r\n      style={{ height: height }}\r\n      onClick={() => setFlip(!flip)}\r\n    >\r\n      <div className=\"front\" ref={frontEl}>\r\n        {flashcard.question}\r\n        <div className=\"flashcard-options\">\r\n          {flashcard.options.map(option => {\r\n            return <div className=\"flashcard-option\" key={option}>{option}</div>\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}