{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barke\\\\OneDrive\\\\Desktop\\\\Solo_Cap_Front_and_Back\\\\Solo_Cap_Front\\\\src\\\\components\\\\flashcards\\\\flashcards.jsx\";\nimport './flashcards.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Immutable from 'immutable';\nimport { createElement } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      word: '',\n      description: '',\n      showError: false\n    };\n  }\n\n  hideError() {\n    this.setState({\n      showError: !this.state.showError\n    });\n  }\n\n  render() {\n    const errorMessage = this.state.showError ? 'Please fill in the word and description!' : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-card__shadow\",\n        onClick: () => {\n          this.props.onShadowClick();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-card__body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create New Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-card__input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"word\",\n            placeholder: \"Word i.e. 'React'\",\n            value: this.state.word,\n            onChange: e => this.setState({\n              word: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"description\",\n            placeholder: \"Description i.e. 'A front end js framework.'\",\n            value: this.state.description,\n            onChange: e => this.setState({\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"create-card__button\",\n            onClick: () => {\n              if (this.state.word.length === 0 || this.state.description.length === 0) {\n                this.setState({\n                  showError: !this.state.showError\n                });\n                setTimeout(() => this.hideError(), 2000);\n              } else {\n                this.props.onShadowClick();\n                const word = new Immutable.Map({\n                  word: this.state.word,\n                  description: this.state.description\n                });\n                this.props.onCreateCard(word);\n              }\n            },\n            children: \"Create!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-card__error\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content header-content__left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content header-content__middle\",\n        children: \"Flash Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content header-content__right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CreateCard;\n\nclass Card extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showAnswer: false\n    };\n  }\n\n  render() {\n    const content = this.state.showAnswer ? this.props.backContent : this.props.frontContent;\n    const iconClass = this.state.showAnswer ? 'reply' : 'share';\n    const cardClass = this.state.showAnswer ? 'back' : '';\n    const contentClass = this.state.showAnswer ? 'back' : 'front';\n    const actionClass = this.state.showAnswer ? 'active' : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${cardClass}`,\n      onClick: () => this.setState({\n        showAnswer: !this.state.showAnswer\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"card__counter\",\n        children: this.props.cardNumber + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__flip-card\",\n        onClick: () => {\n          this.setState({\n            showAnswer: !this.state.showAnswer\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `fa fa-${iconClass}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card__content--${contentClass}`,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card__actions ${actionClass}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__prev-button\",\n          onClick: () => {\n            this.props.showPrevCard();\n            this.setState({\n              showAnswer: false\n            });\n          },\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__next-button\",\n          onClick: () => {\n            this.props.showNextCard();\n            this.setState({\n              showAnswer: false\n            });\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass CardContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cards: Immutable.fromJS([{\n        word: 'Jazz',\n        description: 'A type of music of black American origin characterized by improvisation, syncopation, and usually a regular or forceful rhythm, emerging at the beginning of the 20th century.'\n      }, {\n        word: 'Reggae',\n        description: 'Music like Bob Marley, man.'\n      }, {\n        word: 'Folk',\n        description: 'Music like Bob Dylan, man.'\n      }]),\n      cardNumber: 0\n    };\n    this.boundCallback = this.hideCreateCard.bind(this);\n    this.boundCreateCard = this.setCard.bind(this);\n    this.boundShowPrevCard = this.showPrevCard.bind(this);\n    this.boundShowNextCard = this.showNextCard.bind(this);\n  }\n\n  hideCreateCard() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  showNextCard() {\n    if (this.state.cardNumber + 1 !== this.state.cards.size) {\n      this.setState({\n        cardNumber: this.state.cardNumber += 1\n      });\n    }\n  }\n\n  showPrevCard() {\n    if (this.state.cardNumber !== 0) {\n      this.setState({\n        cardNumber: this.state.cardNumber -= 1\n      });\n    }\n  }\n\n  setCard(card) {\n    const newCards = this.state.cards.push(card);\n    this.setState({\n      cards: newCards\n    });\n  } // generateDots() {\n  //   const times = this.state.cards.size;\n  //   let arr = [];\n  //   _.times(times).forEach((num) => {\n  //     const dotClass = num  === this.state.cardNumber ? 'active' : '';\n  //     arr.push(\n  //       <span \n  //         className={`card-container__dot fa fa-circle ${dotClass}`}\n  //         onClick={() => this.setState({cardNumber: num})}\n  //       />\n  //     )\n  //   });\n  //   return arr;\n  // }\n\n\n  generateCards() {\n    const cards = this.state.cards;\n    const cardsList = cards.map(card => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        frontContent: card.get('word'),\n        backContent: card.get('description'),\n        showNextCard: this.boundShowNextCard,\n        showPrevCard: this.boundShowPrevCard,\n        cardNumber: this.state.cardNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }, this);\n    });\n    return cardsList.toJS()[this.state.cardNumber];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"card-container__icon  fa fa-plus\",\n        onClick: () => {\n          this.setState({\n            showModal: !this.state.showModal\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), this.state.showModal ? /*#__PURE__*/_jsxDEV(CreateCard, {\n        onShadowClick: this.boundCallback,\n        onCreateCard: this.boundCreateCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }, this) : '', this.generateCards(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container__dots-wrapper\",\n        children: this.generateDots()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Main extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CardContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 281,\n  columnNumber: 19\n}, this), document.getElementById('app'));","map":{"version":3,"sources":["C:/Users/barke/OneDrive/Desktop/Solo_Cap_Front_and_Back/Solo_Cap_Front/src/components/flashcards/flashcards.jsx"],"names":["React","ReactDOM","Immutable","createElement","CreateCard","Component","constructor","state","word","description","showError","hideError","setState","render","errorMessage","props","onShadowClick","e","target","value","length","setTimeout","Map","onCreateCard","Header","showModal","Card","showAnswer","content","backContent","frontContent","iconClass","cardClass","contentClass","actionClass","cardNumber","showPrevCard","showNextCard","CardContainer","cards","fromJS","boundCallback","hideCreateCard","bind","boundCreateCard","setCard","boundShowPrevCard","boundShowNextCard","size","card","newCards","push","generateCards","cardsList","map","get","toJS","generateDots","Main","document","getElementById"],"mappings":"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","sourcesContent":["import './flashcards.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Immutable from 'immutable';\r\nimport { createElement } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CreateCard extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        word: '',\r\n        description: '',\r\n        showError: false\r\n      }\r\n    }\r\n      \r\n    hideError() {\r\n      this.setState({showError: !this.state.showError});\r\n    }\r\n    \r\n    render() {\r\n      const errorMessage = this.state.showError ? 'Please fill in the word and description!' : '';\r\n      return (\r\n        <div className='create-card'>\r\n          <div \r\n            className='create-card__shadow'\r\n            onClick={() => {\r\n              this.props.onShadowClick();\r\n            }}\r\n          >\r\n          </div>\r\n          <div className='create-card__body'>\r\n            <h1>Create New Card</h1>\r\n            <div className='create-card__input-wrapper'>\r\n              <input \r\n                id='word' \r\n                placeholder=\"Word i.e. 'React'\"\r\n                value = {this.state.word}\r\n                onChange = {(e) => this.setState({word: e.target.value})}\r\n              />\r\n              <input \r\n                id='description' \r\n                placeholder=\"Description i.e. 'A front end js framework.'\"\r\n                value = {this.state.description}\r\n                onChange = {(e) => this.setState({description: e.target.value})}\r\n              />\r\n              <br/>\r\n              <button \r\n                id='create-card__button'\r\n                onClick={() => {\r\n                 \r\n                  if (this.state.word.length === 0 || this.state.description.length === 0) {\r\n                    this.setState({showError: !this.state.showError});\r\n                    setTimeout(() => this.hideError(), 2000);\r\n                  } else {\r\n                    this.props.onShadowClick();\r\n                    const word = new Immutable.Map({word: this.state.word, description: this.state.description});\r\n                    this.props.onCreateCard(word);  \r\n                  }\r\n                }}\r\n              >\r\n                  Create!\r\n              </button>\r\n              <div className='create-card__error'>\r\n                {errorMessage}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Header extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        showModal: false\r\n      }\r\n    }\r\n     \r\n    render() {\r\n      return (\r\n        <div className='header'>\r\n          <div className='header-content header-content__left'>\r\n            \r\n          </div>\r\n          <div className='header-content header-content__middle'>\r\n            Flash Cards\r\n          </div>\r\n          <div className='header-content header-content__right'>\r\n            \r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default CreateCard\r\n\r\n  class Card extends React.Component {\r\n    \r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        showAnswer: false\r\n      }\r\n    }\r\n   \r\n    render() {\r\n      const content = this.state.showAnswer ? this.props.backContent : this.props.frontContent;\r\n      const iconClass = this.state.showAnswer ? 'reply' : 'share';\r\n      const cardClass = this.state.showAnswer ? 'back' : '';\r\n      const contentClass = this.state.showAnswer ? 'back' : 'front';\r\n      const actionClass = this.state.showAnswer ? 'active' : '';\r\n  \r\n      return (\r\n        <div \r\n          className={`card ${cardClass}`}\r\n          onClick={() => this.setState({showAnswer: !this.state.showAnswer})}\r\n        >\r\n        <span className='card__counter'>{this.props.cardNumber + 1}</span>\r\n          <div \r\n            className='card__flip-card'\r\n            onClick={ () => {\r\n              this.setState({showAnswer: !this.state.showAnswer});\r\n            }}\r\n          >\r\n  \r\n            <span className={`fa fa-${iconClass}`}/>\r\n          </div>\r\n          <div className={`card__content--${contentClass}`}>\r\n            {content}\r\n          </div>\r\n          <div className={`card__actions ${actionClass}`}>\r\n            <div \r\n              className='card__prev-button'\r\n              onClick={() => {\r\n                this.props.showPrevCard();\r\n                this.setState({showAnswer: false});\r\n              }}\r\n            >\r\n              Prev\r\n            </div>\r\n            <div \r\n              className='card__next-button'\r\n              onClick={() => {\r\n                this.props.showNextCard();\r\n                this.setState({showAnswer: false});\r\n              }}\r\n            >\r\n              Next\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  class CardContainer extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        cards: Immutable.fromJS([{\r\n          word: 'Jazz',\r\n          description: 'A type of music of black American origin characterized by improvisation, syncopation, and usually a regular or forceful rhythm, emerging at the beginning of the 20th century.',\r\n        }, {\r\n          word: 'Reggae',\r\n          description: 'Music like Bob Marley, man.',\r\n        }, {\r\n          word: 'Folk',\r\n          description: 'Music like Bob Dylan, man.',\r\n        }\r\n      ]),\r\n        cardNumber: 0\r\n      };\r\n      this.boundCallback = this.hideCreateCard.bind(this);\r\n      this.boundCreateCard = this.setCard.bind(this);\r\n      this.boundShowPrevCard = this.showPrevCard.bind(this);\r\n      this.boundShowNextCard = this.showNextCard.bind(this);\r\n    }\r\n    \r\n    hideCreateCard() {\r\n      this.setState({showModal: false});\r\n    }\r\n    \r\n    showNextCard() {\r\n      if ((this.state.cardNumber + 1) !== this.state.cards.size) {\r\n        this.setState({cardNumber: this.state.cardNumber += 1});\r\n      }\r\n    }\r\n    \r\n    showPrevCard() {\r\n      if (this.state.cardNumber !== 0) {\r\n        this.setState({cardNumber: this.state.cardNumber -= 1});\r\n      }\r\n    }\r\n    \r\n    setCard(card) {\r\n      const newCards = this.state.cards.push(card);\r\n      this.setState({cards: newCards});\r\n    }\r\n    \r\n    // generateDots() {\r\n    //   const times = this.state.cards.size;\r\n    //   let arr = [];\r\n    //   _.times(times).forEach((num) => {\r\n    //     const dotClass = num  === this.state.cardNumber ? 'active' : '';\r\n    //     arr.push(\r\n    //       <span \r\n    //         className={`card-container__dot fa fa-circle ${dotClass}`}\r\n    //         onClick={() => this.setState({cardNumber: num})}\r\n    //       />\r\n    //     )\r\n    //   });\r\n    //   return arr;\r\n    // }\r\n   \r\n    generateCards() {\r\n      const cards = this.state.cards;\r\n       const cardsList = cards.map((card) => {\r\n          return (\r\n            <Card \r\n              frontContent={card.get('word')}\r\n              backContent={card.get('description')}\r\n              showNextCard={this.boundShowNextCard}\r\n              showPrevCard = {this.boundShowPrevCard}\r\n              cardNumber={this.state.cardNumber}\r\n            />\r\n            );\r\n        })\r\n       return(cardsList.toJS()[this.state.cardNumber]); \r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n          <span \r\n              className='card-container__icon  fa fa-plus' \r\n              onClick={() => {\r\n                this.setState({showModal: !this.state.showModal});\r\n              }}\r\n            />\r\n          {this.state.showModal \r\n            ? <CreateCard \r\n                onShadowClick={this.boundCallback}\r\n                onCreateCard={this.boundCreateCard}\r\n              /> \r\n            : ''}\r\n          {this.generateCards()}\r\n          <div className='card-container__dots-wrapper'>\r\n            {this.generateDots()}\r\n          </div>\r\n        </div>\r\n     );\r\n    }\r\n  }\r\n  \r\n  class Main extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className='wrapper'>\r\n          <Header />\r\n          <div className='content-wrapper'>\r\n            <CardContainer />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(<Main />, document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}